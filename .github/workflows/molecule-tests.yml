---
name: Molecule tests

on:
  push:
  pull_request:

env:
  CARTRIDGE_CLI_VERSION: '2.4.0'

jobs:
  create-packages:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.owner.login != 'tarantool'

    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        tarantool-version: ["1.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@master

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: packages
          key: ${{ env.CARTRIDGE_CLI_VERSION }}.${{ matrix.tarantool-version }}

      - name: Install requirements
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          sudo apt -y update
          sudo apt -y install git gcc make cmake unzip
          git config --global user.email "test@tarantool.io" \
            && git config --global user.name "Tar Antool"
          curl -L https://tarantool.io/JRceXH/release/${{ matrix.tarantool-version }}/installer.sh | bash
          sudo apt install -y cartridge-cli ${{ env.CARTRIDGE_CLI_VERSION }}

      - name: Log Tarantool and Cartridge CLI versions
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          tarantool --version
          cartridge version

      - name: Create test packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: ./create-packages.sh

      - name: Upload packages artifact
        uses: actions/upload-artifact@v2
        with:
          name: packages-${{ matrix.tarantool-version }}
          path: packages

  molecule-tests:
    needs: create-packages
    if: |
      github.event_name == 'push' ||
      github.event_name == 'pull_request' && github.event.pull_request.head.repo.owner.login != 'tarantool'
    runs-on: [ubuntu-latest]
    container:
      image: docker://gofrolist/molecule:v2.0.0
    strategy:
      matrix:
        tarantool-version: ["1.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@master
        with:
          path: "${{ github.repository }}"

      - name: Download packages artifact
        uses: actions/download-artifact@v2
        with:
          name: packages-${{ matrix.tarantool-version }}
          path: "${{ github.repository }}/packages"

      - name: Log molecule version
        run: |
          molecule --version

      - name: Test with molecule
        run: |
          cd ${{ github.repository }}

          molecule create

          docker ps
          docker inspect molecule_local/centos:7
          docker network inspect cartridge-network

          molecule converge

          wget localhost:8081/admin/
